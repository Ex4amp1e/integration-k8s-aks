---
name: ci
on:
  pull_request:
  push:
    branches:
      - 'release/**'
jobs:
  yamllint:
    name: yamllint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v1
        with:
          config_file: .ci/yamllint.yml
          strict: true
  shellcheck:
    name: shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: shellcheck
        uses: fkautz/shell-linter@v1.0.1
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.35
  excludeFmtErrorf:
    name: exclude fmt.Errorf
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Exclude fmt.Errorf
        run: |
          if grep -r --include=*.go --exclude=*.pb.go fmt.Errorf . ; then
           echo "Please use errors.Errorf (or errors.New or errors.Wrap or errors.Wrapf) as appropriate rather than fmt.Errorf"
           exit 1
          fi
  checkgomod:
    name: check go.mod and go.sum
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - run: go mod tidy
      - name: Check for changes in go.mod or go.sum
        run: |
          git diff --name-only --exit-code go.mod || ( echo "Run go tidy" && false )
          git diff --name-only --exit-code go.sum || ( echo "Run go tidy" && false )
  azure:
    environment: AKS
    name: Azure Kubernetes Service
    runs-on: ubuntu-latest
    steps:
      - name: Install azure-cli
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az version
      - name: Set up azure permissions
        run: |
          sudo chmod -R 777 ~/.azure
      - name: Set up /bin permissions
        run: |
          sudo chmod -R 777 /bin
      - name: Set up go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          path: ${{ github.repository }}
      - name: Setup AKS cluster
        working-directory: ${{ github.repository }}
        run: |
          az login --service-principal --username ${AZURE_SERVICE_PRINCIPAL} --password ${AZURE_SERVICE_PRINCIPAL_SECRET} --tenant ${AZURE_TENANT}
          az aks create \
              --resource-group "$AZURE_RESOURCE_GROUP" \
              --name "$AZURE_CLUSTER_NAME" \
              --node-count 2 \
              --node-vm-size Standard_B2s \
              --generate-ssh-keys \
              --debug
          az aks wait  \
            --name "$AZURE_CLUSTER_NAME" \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --created > /dev/null
          az aks get-credentials \
              --name "$AZURE_CLUSTER_NAME" \
              --resource-group "$AZURE_RESOURCE_GROUP" \
              --file "/tmp/config" \
              --overwrite-existing
        env:
          AZURE_SERVICE_PRINCIPAL: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}
          AZURE_SERVICE_PRINCIPAL_SECRET: ${{ secrets.AZURE_SERVICE_PRINCIPAL_SECRET }}
          AZURE_TENANT: ${{ secrets.AZURE_TENANT }}
          AZURE_CLUSTER_NAME: aks-${{ github.run_id }}-${{ github.run_number }}
          AZURE_RESOURCE_GROUP: nsm-ci
      - name: Run tests
        working-directory: ${{ github.repository }}
        run: |
          go test -count 1 -timeout 1h55m -race -v ./...
        env:
          KUBECONFIG: /tmp/config
      - name: Cleanup AKS cluster
        if: ${{ always() }}
        working-directory: ${{ github.repository }}
        run: |
          az aks delete \
              --name "$AZURE_CLUSTER_NAME" \
              --resource-group "$AZURE_RESOURCE_GROUP" \
              --yes
        env:
          AZURE_CLUSTER_NAME: aks-${{ github.run_id }}-${{ github.run_number }}
          AZURE_RESOURCE_GROUP: nsm-ci
      - name: Upload logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs-${{ github.run_number }}
          path: ${{ github.repository }}/logs